name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - '.github/workflows/**'

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Get short commit SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image (multi-stage)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-boot-seminar:${{ env.SHORT_SHA }} backend
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-boot-seminar:${{ env.SHORT_SHA }}

      - name: Update image tag in deployment.yaml
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/spring-boot-seminar:${{ env.SHORT_SHA }}|" manifests/spring-boot/deployment.yaml

      - name: Commit updated deployment.yaml
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add manifests/spring-boot/deployment.yaml
          git commit -m "ðŸ”– update image tag to ${{ env.SHORT_SHA }}"
          git push

      - name: Trigger ArgoCD Sync
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_APP: seminar-spring-boot
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME}}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
        run: |
          sudo apt-get update && sudo apt-get install -y jq curl

          echo "ðŸ“¥ Requesting ArgoCD token..."
          TOKEN=$(curl -s -k -X POST $ARGOCD_SERVER/api/v1/session \
            -H "Content-Type: application/json" \
            -d "{\"username\":\"$ARGOCD_USERNAME\",\"password\":\"$ARGOCD_PASSWORD\"}" | jq -r '.token')

          echo "ðŸš€ Triggering ArgoCD sync for app: $ARGOCD_APP"
          curl -s -k -X POST $ARGOCD_SERVER/api/v1/applications/$ARGOCD_APP/sync \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json"